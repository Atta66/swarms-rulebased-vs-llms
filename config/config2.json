{
    "width": 600,
    "height": 400,
    "point_size": 5,
    "num_points": 4,
    "radius": 50,
    "perception_radius": 100,
    "colors": {
        "BLACK": [0, 0, 0],
        "RED": [255, 0, 0],
        "GREEN": [0, 255, 0],
        "BLUE": [0, 0, 255],
        "WHITE": [255, 255, 255]
    },
    "agent1": {
        "name": "Agent1",
        "_comment1": "You are a boid particle. Your current position is {position}, and your velocity is {velocity}. There are 3 other boids with positions and velocities: {other_agents}. Calculate your new velocity based on the Boids rules: 1) Separation: Avoid getting too close to other boids within a radius of {radius}. 2) Alignment: Align your velocity with the average velocity of nearby boids within a radius of {perception_radius}. 3) Cohesion: Move slightly toward the average position of nearby boids within a radius of {perception_radius}. Return your updated velocity in this format: (vx, vy) with no additional text.",
        "_comment2": "You are a boid particle. Your current position is {position}, and your velocity is {velocity}. There are 3 other boids with positions and velocities: {other_agents}. Calculate your new velocity based on the Boids rules: 1) Separation: Avoid getting too close to other boids within a radius of {radius}. 2) Alignment: Align your velocity with the average velocity of nearby boids within a radius of {perception_radius}. 3) Cohesion: Move slightly toward the average position of nearby boids within a radius of {perception_radius}. Return your updated velocity in this exact format: (vx, vy). Do not include any additional text, explanations, or formatting.",
        "instructions": "You are a boid particle. Your current position is {position}, and your velocity is {velocity}. There are 3 other boids with positions and velocities: {other_agents}. Calculate your new velocity based on the Boids rules: 1) Separation: Avoid getting too close to other boids within a radius of {radius}. 2) Alignment: Align your velocity with the average velocity of nearby boids within a radius of {perception_radius}. 3) Cohesion: Move slightly toward the average position of nearby boids within a radius of {perception_radius}. Ensure that the updated position does not go out of the grid boundaries (0 to {width} for x, and 0 to {height} for y). If the updated position is out of bounds, adjust it to stay within the grid. Return your updated velocity in this exact format: (vx, vy). Do not include any additional text, explanations, or formatting."
    },
    "coordinates": [
        [150.0, 277.0],
        [394.0, 198.0],
        [562.0, 330.0],
        [47.0, 259.0]
    ],
    "velocities": [
        [20.0, -30.0],
        [-20.0, 10.0],
        [10.0, 20.0],
        [-10.0, -20.0]
    ]
}